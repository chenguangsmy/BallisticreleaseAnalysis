% check EMG MVF on different subjects... 
% |subject| LR    | FB     |
% |------| ------ | ------ |
% |subj1 | 4399   | 4403   | 
% |subj2 | 4407   | 4411   |
% |subj3 | 4417   | 4420   |
% |subj4 | 4431   | 4435   |
% |subj5 |        |        | 4284
% |subj6 | 4311   | 4315   |
% |subj7 | 4445   | 4449   |
% |subj8 | 4454   | 4457   |
% |subj9 | 4462   | 4465   |
% |subj10| 4470   | 4475   |
% |subj11| 4480   | 4484   |
% |subj12| 4490   | 4493   |
% |subj13| 4499   | 4502   |
% |subj14| 4511   | 4514   |
% |subj15| 4519   | 4522   |
% |subj16| 4529   | 4532   |
% |subj17| 4540   | 4544   |
% |subj18| 4556   | 4561   |
% |subj19| 4572   | 4575   |
% |subj20| 4582   | 4585   |
%----------------------------
% ss4399 don't have good force recording because of either module or other bugs...
% The subject 5 and 6 are Chenguang and Himanshu. These two subjects did not do the MVF in the collected sessions for task. But did before (in the testing data).  
% Not sure if subject 5(Chenguang) has his MVF recorded.

sessions = [
    4399    4403 % not deal with first because of recording...
    4407    4411
    4417    4420
    4431    4435
    nan      nan   %4284 no EMG 
    4311    4315   % no EMG
    4445    4449
    4454    4457
    4462    4465
    4470    4475 
    4480    4484
    4490    4493 
    4499    4502 
    4511    4514
    4519    4522
    4529    4532
    4540    4544
    4556    4561
    4572    4575
    4582    4585];


%%
for subj_i = 18%13:20%2:size(sessions,1)
    if (sessions(subj_i,1) == nan)
        continue
    end
    ss1 = SessionScan(sessions(subj_i,1))
    ss2 = SessionScan(sessions(subj_i,2))
    figure(subj_i);
    subplot(2,1,1);
    plot(ss1.data.t, ss1.data.f(1,:))
    subplot(2,1,2);
    plot(ss2.data.t, ss2.data.f(1,:))
end


%% check data and grasp time 
time_slot = cell(20,2);

time_slot{1,1} = [   
    1.017825300000000   1.018651550000000
   1.043515450000000   1.044653650000000
   1.066269100000000   1.067239250000000
   1.068672800000000   1.069591600000000
   ]*1e4;

time_slot{1,2} = [
    1.643947500000000   1.644889850000000
   1.646008300000000   1.646924100000000
   1.648249700000000   1.649129500000000
   1.651823400000000   1.652820350000000
   ]*1e4;


time_slot{2,1} = [[4628.15497958687 4633.99147958687] 
                  [4664.63647958687 4671.94547958687];
                  [4770.04097958687 4779.25047958687]
                  [4795.33347958687 4804.75747958687]];
time_slot{2,2} = [[9725.44390730305 9732.58390730305]
                  [9742.55340730305	9746.07490730305]
              	  [9757.54690730305	9765.08990730305]
              	  [9770.35240730305	9778.19540730305]];

time_slot{3,1} = [
   6.551799741302150   6.559472241302150
   6.573259741302151   6.580729241302150
   6.596323241302150   6.604150241302150
   6.614027741302150   6.621091741302150
    ] * 1e3;
time_slot{3,2} = [   
    9.886592639970589   9.893601639970589
   9.908980139970600   9.915903639970589
   9.932902139970590   9.940636139970589
   9.955091139970589   9.963934139970601
    ] * 1e3;

time_slot{4,1} = [
    6.529344241855910   6.538243741855911
   6.560956741855910   6.571113241855910
   6.587039241855910   6.594431241855911
   6.615843741855910   6.622902241855909
    ] * 1e3;
time_slot{4,2} = [
   1.240099320544660   1.240987820544660
   1.242553620544660   1.243388770544660
   1.245051820544660   1.245926270544660
   1.247518020544660   1.248360120544660
    ] * 1e4;

time_slot{5,1} = [
    ];
time_slot{5,2} = [
    ];

time_slot{6,1} = [
    ];
time_slot{6,2} = [
    ];

time_slot{7,1} = [
    1.424319141013380   1.424986391013380
   1.428709741013380   1.429551841013380
   1.432414241013380   1.433251691013380
   1.437484591013380   1.438292291013380
    ]*1e4;
time_slot{7,2} = [
    1.985834862551020   1.986645062551020
   1.989441762551020   1.990253662551020
   1.993394362551020   1.994263412551020
   1.995960812551020   1.996836712551020
    ]*1e4;

time_slot{8,1} = [
    5.020425359466619   5.028894359466620
   5.047415359466620   5.055336859466620
   5.072639859466620   5.079774359466620
   5.100104859466620   5.106418359466620
    ]*1e3;
time_slot{8,2} = [
    9.059717151736509   9.067948651736510
   9.087216151736509   9.095113651736510
   9.114254151736510   9.121538151736509
   9.137161651736509   9.147231151736511
    ]*1e3;

time_slot{9,1} = [
   5.332826521257780   5.339994521257781
   5.356228521257780   5.365660521257779
   5.383131021257780   5.391098521257780
   5.410131521257780   5.418858521257780
    ]*1e3;
time_slot{9,2} = [
   1.000629189440490   1.001552689440490
   1.003758189440490   1.004604139440490
   1.006433039440490   1.007357239440490
   1.008903889440490   1.009825939440490
    ]*1e4;

time_slot{10,1} = [
  3.911468929919470   3.921089929919470
   3.941164429919470   3.949125429919470
   3.970093429919470   3.979074429919470
   3.995582929919470   4.001785929919470
    ]*1e3;
time_slot{10,2} = [
   1.135835816659800   1.136669166659800
   1.138254966659800   1.139039716659800
   1.141577866659800   1.142376666659800
   1.144070516659800   1.144929316659800
    ]*1e4;

time_slot{11,1} = [
    3.411144317664820   3.419965317664820
   3.439862817664820   3.448704817664820
   3.475075817664820   3.483225317664820
   3.505058317664820   3.513710817664820
    ]*1e3;
time_slot{11,2} = [
    8.468958637247750   8.478348137247751
   8.494462137247750   8.503180637247750
   8.521284637247751   8.529570137247751
   8.546195637247751   8.554095637247750
    ]*1e3;

time_slot{12,1} = [
    3.705725104378870   3.714991604378870
   3.733229104378870   3.742562604378870
   3.759285104378870   3.767678104378870
   3.784399104378870   3.793598604378870
    ]*1e3;
time_slot{12,2} = [
    1.001968949188840   1.002715699188840
   1.004374899188840   1.005086049188840
   1.007221399188840   1.007952599188840
   1.009399399188840   1.010214599188840
    ]*1e4;

time_slot{13,1} = [
       7.000733696707200   7.010311196707200
   7.028225196707200   7.037030196707200
   7.057117196707200   7.065676196707200
   7.081781196707200   7.090227196707200
    ]*1e3;
time_slot{13,2} = [
    1.073027962539600   1.073679062539600
   1.075378062539600   1.076237162539600
   1.077795262539600   1.078624262539600
   1.080147712539600   1.081066612539600
    ]*1e4;

time_slot{14,1} = [
    9.402499740177319   9.411384240177320
   9.427722740177320   9.437083240177321
   9.453849740177320   9.462167240177319
   9.482453240177319   9.490500740177319
    ]*1e3;
time_slot{14,2} = [
       1.547545839664560   1.548404189664560
   1.549956989664560   1.550877589664560
   1.552519939664560   1.553290939664560
   1.556023839664560   1.556942089664560
    ]*1e4;

time_slot{15,1} = [
    7.709874753527600   7.714866753527600
   7.737578753527600   7.744552753527600
   7.773568753527600   7.781765753527600
   7.800998253527601   7.808745253527600
    ]*1e3;
time_slot{15,2} = [
       1.237375247830400   1.238300197830400
   1.239928297830400   1.240761347830400
   1.242540697830400   1.243453647830400
   1.244894097830400   1.245841297830400
    ]*1e4;

time_slot{16,1} = [
    4.766678938181260   4.774875938181260
   4.790631938181250   4.799159438181250
   4.824123438181250   4.832108938181250
   4.856875438181260   4.865345438181250
    ]*1e3;
time_slot{16,2} = [
    9.033276080753071   9.040703580753069
   9.057996080753069   9.067021580753069
   9.082403080753071   9.090703580753070
   9.105481080753071   9.114325580753070
    ]*1e3;

time_slot{17,1} = [
    5.773622024612780   5.781522524612781
   5.798865524612780   5.807139024612781
   5.822241524612780   5.831340524612781
   5.845045024612780   5.855144024612780
    ]*1e3;
time_slot{17,2} = [
    1.389960352216790   1.390789452216790
   1.392776552216790   1.393549902216790
   1.395722402216790   1.396547552216790
   1.399056602216790   1.399857202216790
    ]*1e4;

time_slot{18,1} = [
    6.256580685894200   6.265834185894200
   6.291446185894200   6.300660185894200
   6.318900685894200   6.329096185894200
   6.348240185894200   6.358102185894200
    ]*1e3;
time_slot{18,2} = [
   1.18308476370829    1.18406471370829
   1.18308476370829    1.18406471370829
   1.189642713708290   1.190461213708290
   1.192971413708290   1.193890713708290
    ]*1e4;

time_slot{19,1} = [
     6.726902144708710   6.737955144708709
   6.756641644708711   6.766118644708710
   6.784761644708710   6.794876644708710
   6.817007644708711   6.825982644708710
    ]*1e3;
time_slot{19,2} = [
    1.215823936477700   1.216817186477700
   1.218568886477700   1.219467886477700
   1.222668436477700   1.223482686477700
   1.225494136477700   1.226106536477700
    ]*1e4;

time_slot{20,1} = [
    4.160455590905720   4.170962590905720
   4.189944090905720   4.198748090905720
   4.221027590905720   4.229039590905720
   4.247415590905720   4.254625090905720
    ]*1e3;
time_slot{20,2} = [
     9.264763575657280   9.274306575657290
   9.294838075657280   9.302956075657280
   9.322688075657279   9.331713575657281
   9.355622075657280   9.363907575657279
    ]*1e3;

% get the average of all subject *direction * muscles
mvf_emg = nan(20,4,8);
t_slots = zeros(20,4);
%%
direction_names = 'RLFB'
fh = figure('unit', 'inch', 'position', [0 0 3 3]);
for subj_i = 1:20 
    if sum(subj_i == [5 6])
        continue
    end
    for dir_i = 1:4 % Right, Left, Forward, Backward
        switch dir_i
            case 1 % right
                ss_num = sessions(subj_i,1);
                time_range = time_slot{subj_i,1}(1:2,:);
            case 2 % left
                ss_num = sessions(subj_i,1);
                time_range = time_slot{subj_i,1}(3:4,:);
            case 3 % forward
                ss_num = sessions(subj_i,2);
                time_range = time_slot{subj_i,2}(1:2,:);
            case 4 % backward
                ss_num = sessions(subj_i,2);
                time_range = time_slot{subj_i,2}(3:4,:);
        end

        emgobj = SessionScanEMG(ss_num,1);
        emg_t = emgobj.data.t;
        emg_data = emgobj.data.emg;
        emg_data_rct = abs(emg_data);

        t_idx = (emg_t>time_range(1,1) & emg_t<time_range(1,2)) ...
                | (emg_t>time_range(2,1) & emg_t<time_range(2,2));
        sum(t_idx)/2000 % s of data
        t_slots(subj_i,dir_i) = sum(t_idx)/2000 % length of force exertion (s)
        for ch_i = 1:8
            emgavg = mean(emg_data_rct(ch_i,t_idx));
            mvf_emg(subj_i,dir_i,ch_i) = emgavg;
        end

        % sanity check figure here 
        clf; hold on; 
        plot(emg_data_rct(1,:)); 
        yline(mvf_emg(subj_i,dir_i,1), 'linewidth', 2, 'color', 'r');
        title(['mat file data Subj' num2str(subj_i) 'Dir' direction_names(dir_i) ' session' num2str(ss_num), 'channel 1'])
        saveas(gcf, ['emg_mvf_check/' 'subj' num2str(subj_i), 'dir' direction_names(dir_i) 'ch1_mat.png'])
    end
end
descriptions = {'Format: subj(20)*dir(4)*channel(8);';
                'Among them, subj5, 6 have no data, subject 1~4 only have channel 1-7';
                }
% save('emg_mvf.mat', 'mvf_emg')

%% save data to another file 
emg_t_mvf_all = cell(20,4);
emg_data_mvf_all = cell(20,4);
for subj_i = 1:20 
    if sum(subj_i == [5 6])
        continue
    end
    for dir_i = 1:4 % Right, Forward, Left, Backward
        switch dir_i
            case 1 % right
                ss_num = sessions(subj_i,1);
            case 2 % left
                ss_num = sessions(subj_i,1);
            case 3 % forward
                ss_num = sessions(subj_i,2);
            case 4
                ss_num = sessions(subj_i,2);
        end

        emgobj = SessionScanEMG(ss_num,1);
        emg_t = emgobj.data.t;
        emg_data = emgobj.data.emg;

        emg_t_mvf_all{subj_i,dir_i} = emg_t;
        emg_data_mvf_all{subj_i,dir_i} = emg_data;
    end
end
descriptions = {'Format: subj(20)*dir(4)*channel(8);';
                'Among them, subj5, 6 have no data, subject 1~4 only have channel 1-7';
                }
save('emg_mvf_raw.mat', 'emg_t_mvf_all', 'emg_data_mvf_all', 'time_range', '-v7.3')

%%
% t1 = [11358.358166598	110.671366869191
% 11366.691666598	-33.5338128188456
% 11382.549666598	113.416251515616
% 11390.397166598	11.7427920543466
% 11415.778666598	-132.132848780322
% 11423.766666598	-117.192937758097
% 11440.705166598	-127.543327130486
% 11449.293166598	-120.733181778571]
% t2 = t1(:,1);
% t3 = reshape(t2, 2, 4)'
